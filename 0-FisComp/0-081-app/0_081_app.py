# -*- coding: utf-8 -*-
"""0-081-app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AYd-6EVIUSwuY29o11LifxD3amsSqnfj

Ejercicio 0-081-app 
Alejandro Pujante Pérez
24/02/2021
"""

import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

x = np.array([2.05 , 4.66 , 8.3 , 13 , 15.6 , 16.1 , 19.3 , 24.4 , 26.4 , 27.6 , 28.2 , 30.7 , 34.9 , 45.7 , 48.9 , 50 , 82 ,  86 , 111]).reshape((-1,1))

y = np.array([308 , 467 , 732 , 731 , 1310 , 940 , 940 , 1790 , 2746 , 2000 , 990 , 1790 , 1800 , 3860 , 2900 , 3860 , 4270 , 8680 , 6920])

model = LinearRegression()

model.fit(x , y)

R_sq = model.score(x , y)

m = model.coef_            #Pendiente

ord = model.intercept_     #Ordenada en el origen

r2 = R_sq                  #Correlación

print(m) , print(ord) , print(r2)

x_recta = np.linspace(-1 , 135 , 10000 )

y_recta = m*x_recta + ord

plt.figure(figsize=(18,11))
plt.scatter(x , y ,  linewidth = 4)

plt.title('Representación de datos distancia-tiempo', fontsize=29 , color = 'black')
plt.xlabel('Distancia ($Mpc$)' , fontsize = 22)
plt.ylabel('Velocidad ($km/s$) ' , fontsize = 22)

plt.legend(['Datos'] , loc = "upper left" , prop={'size':20})

plt.rc('xtick', labelsize=20)
plt.rc('ytick', labelsize=20)

plt.grid(alpha = 0.5 , color = 'gray' , linestyle = '-' , linewidth = '0.7')

plt.savefig('datos.png')

plt.figure(figsize=(18,11))
plt.scatter(x , y ,  linewidth = 4)
plt.plot( x_recta , y_recta , color = 'red' , linewidth = 1.5)


plt.title('Ajuste por mínimos cuadrados a datos distancia-velocidad', fontsize=29 , color = 'black')
plt.xlabel('Distancia ($Mpc$)' , fontsize = 22)
plt.ylabel('Velocidad ($km/s$) ' , fontsize = 22)

plt.legend(["Recta ajuste", "Datos"], loc = "upper left" , prop={'size':20})

plt.savefig('0-081-app-ajuste.png')

plt.rc('xtick', labelsize=20)
plt.rc('ytick', labelsize=20)

plt.grid(alpha = 0.5 , color = 'gray' , linestyle = '-' , linewidth = '0.7')

plt.savefig('ajuste.png')


plt.show()